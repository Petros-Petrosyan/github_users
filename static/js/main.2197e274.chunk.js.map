{"version":3,"sources":["containers/Selected/Selected.module.scss","store/user/reducer.js","utiles.js","services/http-services/users.js","services/http-services/index.js","store/user/action.js","store/action-types.js","store/user/saga.js","store/saga.js","store/store.js","containers/Routers.js","components/Menu/Menu.js","components/Search/Search.js","components/UsersInfo/UserInfo/UserInfo.js","components/UsersInfo/UsersInfo.js","containers/GithubUsers/GithubUsers.js","containers/Selected/Selected.js","index.js","containers/GithubUsers/GithubUsers.module.scss","components/Menu/Menu.module.scss","components/UsersInfo/UserInfo/UserInfo.module.scss","components/Search/Search.module.scss"],"names":["module","exports","initialState","repositoriesList","repositories","loading","exist","organisationsList","organisations","getReposStart","state","produce","draftState","getReposSuccess","payload","repos","getReposFail","getOrgsStart","getOrgsSuccess","orgs","getOrgsFail","getAllStorageData","values","keys","Object","localStorage","i","length","push","getItem","map","item","JSON","parse","getUserReposRequest","userName","a","baseRequest","get","res","getUserOrgsRequest","axios","create","baseURL","type","getRepos","getOrgs","userSaga","action","put","data","toast","error","message","position","save","id","Error","setItem","stringify","success","err","all","takeEvery","watchSaga","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","userReducer","store","createStore","applyMiddleware","run","Routers","exact","path","component","to","GithubUsers","Selected","Menu","AppBar","className","classes","container","container__li","Search","dispatch","useDispatch","useState","name","setName","React","repo","org","checkBox","setCheckBox","changCheckbox","event","target","checked","search","value","placeholder","onChange","onRequestSearch","getOrgsInit","search__center","FormControlLabel","control","Checkbox","inputProps","label","UserInfo","props","content","isRepo","selected","projectName","createdData","src","url","onRemove","onClick","saveData","section","img","remove","UsersInfo","owner","avatar_url","login","created_at","key","useSelector","loadingRepo","existRepo","loadingOrg","existOrg","viewRepositories","center","CircularProgress","viewOrganisations","sectionController","Card","marginTop","sectionController__card","sectionController__card__title","users","setUsers","removeItem","userInfo","user","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2197e274.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Selected_title__2MZ0T\"};","import produce from 'immer';\n\n// action types\nimport {\n    GET_REPOS_START,\n    GET_REPOS_SUCCESS,\n    GET_REPOS_FAIL,\n\n    GET_ORGS_START,\n    GET_ORGS_SUCCESS,\n    GET_ORGS_FAIL,\n} from '../action-types';\n\n\nconst initialState = {\n    repositoriesList: {\n        repositories: null,\n        loading: false,\n        exist: false,\n    },\n    organisationsList: {\n        organisations: null,\n        loading: false,\n        exist: false,\n    }\n};\n\n\nconst getReposStart = (state) => {\n    return produce(state, draftState => {\n        draftState.repositoriesList.loading = true;\n        draftState.repositoriesList.exist = false;\n    })\n};\nconst getReposSuccess = (state, payload) => {\n    const {repos} = payload;\n\n    return produce(state, draftState => {\n        draftState.repositoriesList.repositories = repos;\n        draftState.repositoriesList.loading = false;\n        draftState.repositoriesList.exist = true;\n    })\n};\nconst getReposFail = (state) => {\n    return produce(state, draftState => {\n        draftState.repositoriesList.loading = false;\n        draftState.repositoriesList.exist = false;\n    })\n};\n\nconst getOrgsStart = (state) => {\n    return produce(state, draftState => {\n        draftState.organisationsList.loading = true;\n        draftState.organisationsList.exist = false;\n    })\n};\nconst getOrgsSuccess = (state, payload) => {\n    const {orgs} = payload;\n\n    return produce(state, draftState => {\n        draftState.organisationsList.organisations = orgs;\n        draftState.organisationsList.loading = false;\n        draftState.organisationsList.exist = true;\n    })\n};\nconst getOrgsFail = (state) => {\n    return produce(state, draftState => {\n        draftState.organisationsList.loading = false;\n        draftState.organisationsList.exist = false;\n    })\n};\n\n\nconst userReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case GET_REPOS_START: return getReposStart(state);\n        case GET_REPOS_SUCCESS: return getReposSuccess(state, payload);\n        case GET_REPOS_FAIL: return getReposFail(state);\n\n        case GET_ORGS_START: return getOrgsStart(state);\n        case GET_ORGS_SUCCESS: return getOrgsSuccess(state, payload);\n        case GET_ORGS_FAIL: return getOrgsFail(state);\n\n        default: return state;\n    }\n};\n\n\nexport { userReducer };","export function getAllStorageData() {\n    const values = [];\n    const keys = Object.keys(localStorage);\n    let i = keys.length;\n\n    while (i--) {\n        values.push(localStorage.getItem(keys[i]));\n    }\n\n    return values.map((item) => JSON.parse(item));\n}","import { baseRequest } from '.';\n\n// get user repositories\nexport const getUserReposRequest = async (userName) => {\n    const res = await baseRequest.get(`/users/${userName}/repos`);\n    return res;\n}\n\n// get user organisations\nexport const getUserOrgsRequest = async (userName) => {\n    const res = await baseRequest.get(`/users/${userName}/orgs`);\n    return res;\n}","import axios from 'axios';\n\nexport const baseRequest = axios.create({\n    baseURL: 'https://api.github.com'\n});\n\nexport {\n    getUserReposRequest,\n    getUserOrgsRequest,\n} from './users';","// action types\nimport {\n    GET_REPOS_INIT,\n    GET_REPOS_START,\n    GET_REPOS_SUCCESS,\n    GET_REPOS_FAIL,\n\n    GET_ORGS_INIT,\n    GET_ORGS_START,\n    GET_ORGS_SUCCESS,\n    GET_ORGS_FAIL,\n\n    SAVE_DATA,\n} from '../action-types';\n\n\nexport const getReposInit = (userName) => {\n    return {\n        type: GET_REPOS_INIT,\n        payload: {userName}\n    }\n};\nexport const getReposStart = () => {\n    return {\n        type: GET_REPOS_START,\n    }\n};\nexport const getReposSuccess = (repos) => {\n    return {\n        type: GET_REPOS_SUCCESS,\n        payload: {repos}\n    }\n};\nexport const getReposFail = () => {\n    return {\n        type: GET_REPOS_FAIL,\n    }\n};\n\nexport const getOrgsInit = (userName) => {\n    return {\n        type: GET_ORGS_INIT,\n        payload: {userName}\n    }\n};\nexport const getOrgsStart = () => {\n    return {\n        type: GET_ORGS_START,\n    }\n};\nexport const getOrgsSuccess = (orgs) => {\n    return {\n        type: GET_ORGS_SUCCESS,\n        payload: {orgs}\n    }\n};\nexport const getOrgsFail = () => {\n    return {\n        type: GET_ORGS_FAIL,\n    }\n};\n\nexport const saveData = (data) => {\n    return {\n        type: SAVE_DATA,\n        payload: {data}\n    }\n};\n\n","// fetch user repositories\nexport const GET_REPOS_INIT = 'GET_REPOS_INIT';\nexport const GET_REPOS_START = 'GET_REPOS_START';\nexport const GET_REPOS_SUCCESS = 'GET_REPOS_SUCCESS';\nexport const GET_REPOS_FAIL = 'GET_REPOS_FAIL';\n\n// fetch user organisations\nexport const GET_ORGS_INIT = 'GET_ORGS_INIT';\nexport const GET_ORGS_START = 'GET_ORGS_START';\nexport const GET_ORGS_SUCCESS = 'GET_ORGS_SUCCESS';\nexport const GET_ORGS_FAIL = 'GET_ORGS_FAIL';\n\n// save Data\nexport const SAVE_DATA = 'SAVE_DATA';","import toast from 'cogo-toast';\nimport { getAllStorageData } from '../../utiles';\n\n// saga effects\nimport {\n    put,\n    takeEvery,\n    all,\n} from 'redux-saga/effects';\n\n// http services\nimport {\n    getUserReposRequest,\n    getUserOrgsRequest,\n} from '../../services/http-services';\n\n// action types\nimport {\n    GET_REPOS_INIT,\n    GET_ORGS_INIT,\n    SAVE_DATA\n} from '../action-types';\n\n// actions\nimport {\n    getReposStart,\n    getReposSuccess,\n    getReposFail,\n\n    getOrgsStart,\n    getOrgsSuccess,\n    getOrgsFail,\n} from './action';\n\n\nfunction* getRepos(action) {\n    try {\n        const {payload: {userName}} = action;\n        yield put(getReposStart());\n        const res = yield getUserReposRequest(userName);\n        const {data: repos} = res;\n        yield put(getReposSuccess(repos));\n    } catch (err) {\n        yield put(getReposFail());\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n}\n\nfunction* getOrgs(action) {\n    try {\n        const {payload: {userName}} = action;\n        yield put(getOrgsStart());\n        const res = yield getUserOrgsRequest(userName);\n        const {data: orgs} = res;\n        yield put(getOrgsSuccess(orgs));\n    } catch (err) {\n        yield put(getOrgsFail());\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n}\n\nfunction save(action) {\n    try {\n        const {payload: {data}} = action;\n        if (localStorage.getItem(data.id)) {\n            throw new Error('Already saved');\n        } else if (getAllStorageData().length >= 10) {\n            throw new Error('Maximum saved user 10');\n        } else {\n            localStorage.setItem(data.id, JSON.stringify(data));\n            toast.success('successfully saved', {position: 'bottom-right'});\n        }\n    } catch (err) {\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n}\n\n\nexport function* userSaga() {\n    yield all([\n        takeEvery(GET_REPOS_INIT, getRepos),\n        takeEvery(GET_ORGS_INIT, getOrgs),\n        takeEvery(SAVE_DATA, save),\n    ]);\n}","// saga effects\nimport { all } from 'redux-saga/effects';\n\n// sagas\nimport { userSaga } from './user/saga';\n\n\nexport function* watchSaga() {\n    yield all([\n        userSaga(),\n    ])\n}","// redux\nimport {\n    createStore,\n    combineReducers,\n    applyMiddleware\n} from 'redux';\n\n// Reducers\nimport { userReducer } from './user/reducer';\n\n// sagas\nimport createSagaMiddleware from 'redux-saga';\nimport { watchSaga } from './saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n    userReducer,\n});\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchSaga);","import React from 'react';\n\n// react router\nimport {\n    Route,\n    Switch,\n    Redirect,\n} from 'react-router-dom';\n\n// containers\nimport {\n    Selected,\n    GithubUsers,\n} from '.';\n\n\nconst Routers = () => {\n    return (\n        <Switch>\n            <Route exact path='/'  component={() => <Redirect to='search' />} />\n            <Route exact path='/search' component={GithubUsers} />\n            <Route exact path='/selected' component={Selected} />\n        </Switch>\n    );\n};\n\n\nexport { Routers };","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\n\n// classes\nimport classes from './Menu.module.scss';\n\n\nconst Menu = () => {\n    return (\n        <AppBar position={'static'}>\n            <header>\n                <ul className={classes.container}>\n                    <li className={classes.container__li}>\n                        <Link to='/search'>Search GitHub Users</Link>\n                    </li>\n                    <li className={classes.container__li}>\n                        <Link to='/selected'>Selected</Link>\n                    </li>\n                </ul>\n            </header>\n        </AppBar>\n\n    )\n}\n\nexport { Menu }","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// material-ui\nimport SearchBar from 'material-ui-search-bar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// actions\nimport {\n    getReposInit,\n    getOrgsInit,\n} from '../../store/user/action';\n\n// classes\nimport classes from './Search.module.scss';\n\n\nconst Search = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [checkBox, setCheckBox] = React.useState({\n        repo: true,\n        org: false,\n    });\n\n    const changCheckbox = (event) => {\n        const {target: {name, checked}} = event;\n        setCheckBox({ ...checkBox, [name]: checked });\n    }\n\n    const getData = () => {\n        if (name.length) {\n            const {repo, org} = checkBox;\n            if (repo) {\n                dispatch(getReposInit(name));\n            }\n            if (org) {\n                dispatch(getOrgsInit(name));\n            }\n        }\n    }\n\n    return (\n        <div className={classes.search}>\n            <SearchBar\n                value={name}\n                placeholder={'Search Username'}\n                onChange={(value) => setName(value)}\n                onRequestSearch={getData}\n            />\n\n            <div className={classes.search__center}>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkBox.repo}\n                            onChange={changCheckbox}\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                            name='repo'\n                        />\n                    }\n                    label=\"Repositories\"\n                />\n\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkBox.org}\n                            onChange={changCheckbox}\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                            name='org'\n                        />\n                    }\n                    label=\"Organisations\"\n                />\n            </div>\n        </div>\n    )\n}\n\n\nexport { Search }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\n// action\nimport { saveData } from '../../../store/user/action';\n\n// classes\nimport classes from './UserInfo.module.scss';\n\n\nconst UserInfo = (props) => {\n    const dispatch = useDispatch();\n    const {isRepo, selected, id, projectName, createdData, src, name, url, onRemove} = props;\n\n    const save = () => {\n        if (!selected) {\n            let data;\n            if (isRepo) {\n                data = {isRepo, id, src, name, projectName, createdData}\n            } else {\n                data = {isRepo, id, src, name, url}\n            }\n            dispatch(saveData(data));\n        }\n    }\n\n    const remove = () => {\n        onRemove(id);\n    }\n\n    let content;\n    if (isRepo) {\n        content = (\n            <div>\n                <h3>{name}</h3>\n                <p><b>Project Name:</b> {projectName}</p>\n                <p><b>Created at:</b> {createdData}</p>\n            </div>\n        )\n    } else {\n        content = (\n            <div>\n                <h3>{name}</h3>\n                <p><b>Url:</b> {url}</p>\n            </div>\n        )\n    }\n\n    return (\n            <div onClick={save} className={classes.section}>\n                <img className={classes.img} src={src} />\n                {content}\n                {selected ? <span onClick={remove} className={classes.remove}>X</span> : null}\n            </div>\n    )\n}\n\n\nUserInfo.propTypes = {\n    isRepo: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    projectName: PropTypes.string,\n    createdData: PropTypes.string,\n    src: PropTypes.string,\n    name: PropTypes.string,\n    url: PropTypes.string,\n}\n\n\nexport { UserInfo }","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// components\nimport { UserInfo } from '.';\n\n\nconst UsersInfo = (props) => {\n    const {isRepo, repos, orgs} = props;\n\n    if (isRepo) {\n        if (repos.length) {\n            const info = repos.map((repo) => {\n                const {owner: {avatar_url, login}, created_at, name, id} = repo;\n\n                return (\n                    <UserInfo\n                        key={id}\n                        id={id}\n                        projectName={name}\n                        createdData={created_at}\n                        src={avatar_url}\n                        name={login}\n                        isRepo={isRepo}\n                    />\n                )\n            });\n\n            return info\n        } else {\n            return <p>No Result</p>\n        }\n    } else {\n        if (orgs.length) {\n            const info = orgs.map((org) => {\n                const {avatar_url, login, url, id} = org;\n                return (\n                    <UserInfo\n                        key={id}\n                        id={id}\n                        src={avatar_url}\n                        url={url}\n                        name={login}\n                        isRepo={isRepo}\n                    />\n                )\n            });\n\n            return info\n        } else {\n            return <p>No Result</p>\n        }\n    }\n}\n\n\nUsersInfo.propTypes = {\n    isRepo: PropTypes.bool.isRequired,\n    repos: PropTypes.array,\n    orgs: PropTypes.array,\n}\n\n\nexport { UsersInfo }","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n// material\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\n\n// components\nimport {\n    Search,\n    UsersInfo\n} from '../../components';\n\n// classes\nimport classes from './GithubUsers.module.scss';\n\n\nconst GithubUsers = () => {\n    const {\n        repositoriesList: {repositories, loading: loadingRepo, exist: existRepo},\n        organisationsList: {organisations, loading: loadingOrg, exist: existOrg},\n    } = useSelector((state) => state.userReducer);\n\n    let viewRepositories = <p>Please search username for view repositories</p>\n    if (loadingRepo) {\n        viewRepositories = <div className={classes.center}><CircularProgress/></div>\n    }\n    if (existRepo) {\n        viewRepositories = <UsersInfo isRepo={true} repos={repositories} />\n    }\n\n    let viewOrganisations = <p>Please search username for view organisations</p>\n    if (loadingOrg) {\n        viewOrganisations = <div className={classes.center}><CircularProgress/></div>\n    }\n    if (existOrg) {\n        viewOrganisations = <UsersInfo isRepo={false} orgs={organisations} />\n    }\n\n    return (\n        <section>\n            <Search />\n            <div className={classes.sectionController}>\n                <Card className={classes.marginTop}>\n                    <div className={classes.sectionController__card}>\n                        <h2 className={classes.sectionController__card__title}>Repositories</h2>\n                        <p className={classes.sectionController__card__title}><b>Click on user for save</b></p>\n                        {viewRepositories}\n                    </div>\n                </Card>\n                <Card className={classes.marginTop}>\n                    <div className={classes.sectionController__card}>\n                        <h2 className={classes.sectionController__card__title}>Organisations</h2>\n                        <p className={classes.sectionController__card__title}><b>Click on user for save</b></p>\n                        {viewOrganisations}\n                    </div>\n                </Card>\n            </div>\n        </section>\n    )\n}\n\nexport { GithubUsers }","import React, { useState } from 'react';\nimport { getAllStorageData } from '../../utiles';\nimport { UserInfo } from '../../components/UsersInfo';\nimport toast from 'cogo-toast';\n\n// classes\nimport classes from './Selected.module.scss';\n\n\nconst Selected = () => {\n    const [users, setUsers] = useState(getAllStorageData());\n\n    const remove = (id) => {\n        localStorage.removeItem(id);\n        setUsers(() => getAllStorageData());\n        toast.success('successfully removed', {position: 'bottom-right'});\n    }\n\n    const userInfo = users.map((user) => {\n        return <UserInfo key={user.id} onRemove={remove} selected={true} {...user} />\n    });\n\n    return (\n        <section>\n            <h2 className={classes.title}>Selected users</h2>\n            {userInfo}\n        </section>\n    )\n}\n\n\nexport { Selected }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { store } from './store/store';\nimport { Routers } from './containers';\nimport { Menu } from './components';\nimport './index.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <Menu />\n                <Routers />\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionController\":\"GithubUsers_sectionController__3A0MQ\",\"sectionController__card\":\"GithubUsers_sectionController__card__1JPg6\",\"sectionController__card__title\":\"GithubUsers_sectionController__card__title__2B84v\",\"marginTop\":\"GithubUsers_marginTop__2PbSP\",\"center\":\"GithubUsers_center__1flh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Menu_container__3OY_Q\",\"container__li\":\"Menu_container__li__3nNAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"UserInfo_section__26m5E\",\"remove\":\"UserInfo_remove__1ILqn\",\"img\":\"UserInfo_img__1RV04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3Q-BZ\",\"search__center\":\"Search_search__center__37-8A\"};"],"sourceRoot":""}